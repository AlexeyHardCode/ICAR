openapi: 3.0.1
info:
  title: Release Candidate Messages
  description: |
    The specifications of messages which are ready for ICAR approval and release 
  version: '1.0'
servers:
  - url: /
security:

tags:
  - name: ICAR approval ready
    description: |
      (almost) exact copy of existing ICAR-ADE standard message, ready for approval
paths:
  '/locations/{location-scheme}/{location-id}/milking-visits':
    get:
      tags:
        - ICAR approval ready
      summary: Get the data for milking visits
      description: |
        # Purpose
        Provides data from visits of animals to a milking parlour
      parameters:
        - name: location-scheme
          in: path
          description: The scheme id for the location identifier.
          required: true
          schema:
            type: string
            enum:
              - nl-v1
              - be-v1
        - name: location-id
          in: path
          description: The unique identifier for the location.
          required: true
          schema:
            type: string
        - name: start-date-time
          in: query
          description: The start of the date-time range for the data to get in the request.
          schema:
            type: string
            format: date-time
        - name: end-date-time
          in: query
          description: The end of the date-time range for the data to get in the request.
          schema:
            type: string
            format: date-time
      responses:
        '201':
          description: Successful. The response contains the milking results for the given location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/icarMilkingVisitsResponse'
        default:
          description: An error has occured while handling the request. Check the content of the message for the error details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/error'
                description: A default response containing only a list of errors

components:
  schemas:
    responseErrors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/error'
    responseMetaData:
      type: object
      properties:
        metaData:
          $ref: '#/components/schemas/metaData'
    error:
      type: object
      properties:
          $ref: 'https://raw.githubusercontent.com/adewg/ICAR/master/Release%20Candidate%20Messages/exampleErrorResource.json'
    metaData:
      required:
        - source
      type: object
      properties:
          $ref: 'https://raw.githubusercontent.com/adewg/ICAR/master/Release%20Candidate%20Messages/icarMetaDataResource.json'
    icarMilkingVisitsResponse:
      type: array
      items:
        $ref: '#/components/schemas/icarMilkingVisitsResponseDataSources'
    icarMilkingVisitsResponseDataSources:
      allOf:
        - $ref: '#/components/schemas/responseMetaData'
        - $ref: '#/components/schemas/responseErrors'
        - $ref: '#/components/schemas/icarMilkingVisitsResponseDataSource'
    icarMilkingVisitsResponseDataSource:
      type: object
      properties:
        data:
          $ref: 'https://raw.githubusercontent.com/adewg/ICAR/master/Release%20Candidate%20Messages/icarMilkingVisitResource.json'

parameters:
    queryEndDateTime:
      name: end-date-time
      in: query
      description: The end of the date-time range for the data to get in the request.
      schema:
        type: string
        format: date-time
    pathLocationScheme:
      name: location-scheme
      in: path
      description: The scheme id for the location identifier.
      required: true
      schema:
        type: string
        enum:
          - nl-v1
          - be-v1
    pathLocationId:
      name: location-id
      in: path
      description: The unique identifier for the location.
      required: true
      schema:
        type: string
    queryStartDateTime:
      name: start-date-time
      in: query
      description: The start of the date-time range for the data to get in the request.
      schema:
        type: string
        format: date-time
