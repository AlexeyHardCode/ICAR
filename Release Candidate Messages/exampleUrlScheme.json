{
  "openapi": "3.0.1",
  "info": {
    "title": "Release Candidate Messages",
    "description": "The specifications of messages which are ready for ICAR approval and release",
    "version": "1.0",
    "contact": {
      "name": "Animal Data Exchange Working Group",
      "url": "https://www.icar.org/index.php/technical-bodies/working-groups/animal-data-exchange-wg/",
      "email": "icar@icar.org"
    }
  },
  "servers": [
    {
      "url": "https://icar-ade.standard.com"
    }
  ],
  "tags": [
    {
      "name": "additions",
      "description": "new endpoints not yet approved"
    },
    {
      "name": "release-candidate-milk",
      "description": "Milk messages approved by the working group, waiting for a test"
    },
    {
      "name": "release-candidate-registration",
      "description": "Registration messages approved by the working group, waiting for a test"
    },
    {
      "name": "release-candidate-reproduction",
      "description": "Reproduction messages approved by the working group, waiting for a test"
    }
  ],
  "paths": {
    "/locations/{location-scheme}/{location-id}/milking-visits": {
      "get": {
        "operationId": "get-milking-visits",
        "summary": "Get the data for milking visits",
        "description": "# Purpose\nProvides data from visits of animals to a milking parlour.\n \nThis comprises all posible data. Anybody can choose to define API's that return less information in the response.\n",
        "tags": [
          "release-candidate-milk"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the milking results for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarMilkingVisitResource.json"
                  }
                },
               "examples": {
                "response": {
                  "value": {
                    "id": "706250",
                    "animal": {
                      "id": "NL 877034232",
                      "scheme": "nl-v1"
                    },
                    "milkingStartingDateTime": "2019-11-01T23:58:31",
                    "milkingVisitDuration": {
                      "value": 349.0,
                      "unitCode": "SEC"
                    },
                    "milkingDuration": {
                      "value": "210",
                      "unitCode": "SEC"
                    },
                    "milkingType": "Automated",
                    "milkingMilkWeight": {
                      "value": 3.5,
                      "unitCode": "KGM"
                    },
                    "milkingComplete": true,
                    "milkingParlourUnit": "101",
                    "milkingBoxNumber": 0,
                    "milkingDeviceId": "101",
                    "measureDeviceId": "101",
                    "eventOffset": "2019-11-01T23:58:31",
                    "eventDeviceId": "101",
                    "quarterMilkings": [ {
                        "icarQuarterId": "LF",
                        "milkingDuration": {
                          "value": "210",
                          "unitCode": "SEC"
                        },
                        "milkingMilkWeight": {
                          "value": 3.5,
                         "unitCode": "KGM"
                        }
                      } ],
                    "animalMilkingSample": [ {
                      "bottleIdentifierType": "BRC",
                      "rackNumber": "3",
                      "bottlePosition": "7"
                    } ],                                          
                    "icarMilkCharacteristics": [ {
                        "characteristic": "FAT",
                        "value": "3.74",
                        "unit": "VP",
                        "icarMeasuringDevice": "to_be_defined_by_ICAR-sensor_group"
                      },
                      {
                        "characteristic": "PROTEIN",
                        "value": "3.54",
                        "unit": "VP"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/test-day-results": {
      "get": {
        "operationId": "get-test-day-results",
        "summary": "Get the data for test days",
        "description": "# Purpose\nProvides data from the test day for animals on a farm\n",
        "tags": [
          "release-candidate-milk"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the test day results for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarTestDayResource.json"
                  }
                },
               "examples": {
                "response": {
                  "value": {
                    "id": "706250",
                    "animal": {
                      "id": "NL 877034232",
                      "scheme": "nl-v1"
                    },
                    "EventDateTime": "2019-11-01T23:58:31",
                    "milkWeight24Hours": {
                      "value": "21.7",
                      "unitCode": "KGM"
                    },
                    "testDayCode": "0",
                    "icarMilkCharacteristics": [
                      {
                        "characteristic": "FAT",
                        "value": "3.74",
                        "unit": "VP",
                        "icarMeasuringDevice": "to_be_defined_by_ICAR-sensor_group"
                      },
                      {
                        "characteristic": "PROTEIN",
                        "value": "3.54",
                        "unit": "VP"
                      }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/births": {
      "get": {
        "operationId": "get-births",
        "summary": "Get the births for a certain location",
        "description": "# Purpose\nProvides the born animals on a location\n",
        "tags": [
          "release-candidate-registration"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the births for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarMovementBirthRegistrationResource.json"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/deaths": {
      "get": {
        "operationId": "get-deaths",
        "summary": "Get the deaths for a certain location",
        "description": "# Purpose\nProvides the died animals on a location\n",
        "tags": [
          "release-candidate-registration"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the died animals for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarMovementDeathResource.json"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/arrivals": {
      "get": {
        "operationId": "get-arrivals",
        "summary": "Get the arrivals for a certain location",
        "description": "# Purpose\nProvides the arrived animals on a location\n",
        "tags": [
          "release-candidate-registration"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the arrived animals for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarMovementArrivalResource.json"
                  }
                },
               "examples": {
                "response": {
                  "value": {
                    "id": "ac9bdd26-0e20-44e7-b311-7d3d988f9717",
                    "animal": {
                      "id": "NL 919713288",
                      "scheme": "nl.ubn"
                    },
                    "eventDateTime": "2016-01-06",
                    "location": {
                      "id": "231817",
                      "scheme": "nl.ubn"
                    },
                    "animalDetail": {
                    "alternativeIdentifiers": [],
                    "species": "Cattle",
                    "gender": "Female",
                    "birthDate": "2013-11-06",
                    "breedFractions": {
                      "denominator": "8",
                      "fractions": [
                        {
                          "breed": {
                            "id": "HF",
                            "scheme": "icar.org"
                          },
                          "fraction": "8"
                        }
                      ]
                    },
                    "coatColor": "RB",
                    "managementTag": "88",
                    "name": "NELLY 258",
                    "productionPurpose": "Milk",
                    "status": "Alive",
                    "parentage": [
                      {
                        "parentOf": {
                           "id": "NL 919713288",
                           "scheme": "nl.ubn"
                        },
                        "gender": "Female",
                        "relation": "Genetic",
                        "identifier": {
                           "id": "NL 765410142",
                           "scheme": "nl.ubn"
                         },
                         "officialName": "NELLY 211"
                       },
                       {
                         "parentOf": {
                            "id": "NL 919713288",
                            "scheme": "nl.ubn"
                         },
                         "gender": "Male",
                         "relation": "Genetic",
                         "identifier": {
                            "id": "NL 399745212",
                            "scheme": "nl.ubn"
                         },
                         "officialName": "TOPSPEED KODAK"
                       }
                      ]
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/departures": {
      "get": {
        "operationId": "get-departures",
        "summary": "Get the departures for a certain location",
        "description": "# Purpose\nProvides the departed animals from a location\n",
        "tags": [
          "release-candidate-registration"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the milking results for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarMovementDepartureResource.json"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/animals": {
      "get": {
        "operationId": "get-animals",
        "summary": "Get the animals for a certain location",
        "description": "# Purpose\nProvides the animals on a location\n",
        "tags": [
          "release-candidate-registration"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the animals for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarAnimalCoreResource.json"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Pregnancy-Diagnosis": {
      "get": {
        "operationId": "get-pregnancy-diagnosis",
        "summary": "Get the pregnancy diagnosis for a certain location",
        "description": "# Purpose\nProvides the pregnancy diagnosis on a location\n",
        "tags": [
          "release-candidate-reproduction"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the pregnancy diagnosis for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarReproPregnancyDiagnosisEventResource.json"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Inseminations": {
      "get": {
        "operationId": "get-Inseminations",
        "summary": "Get the inseminations for a certain location",
        "description": "# Purpose\nProvides the Inseminations on a location\n",
        "tags": [
          "release-candidate-reproduction"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the inseminations for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarReproInseminationEventResource.json"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Drying-Offs": {
      "get": {
        "operationId": "get-Drying-Offs",
        "summary": "Get the drying off for a certain location",
        "description": "# Purpose\nProvides the drying off on a location\n",
        "tags": [
          "release-candidate-reproduction"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the drying off for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarMilkingDryOffEventResource.json"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Abortions": {
      "get": {
        "operationId": "get-Abortions",
        "summary": "Get the abortion events for a certain location",
        "description": "# Purpose\nProvides the abortion events on a location\n",
        "tags": [
          "release-candidate-reproduction"
        ],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the abortion events for the given location",
            "content": {
              "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarReproAbortionEventResource.json"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Parturitions": {
    "get": {
      "operationId": "get-Parturitions",
      "summary": "Get the Parturition events for a certain location",
      "description": "# Purpose\nProvides the Parturition events on a location\n",
      "tags": [
        "release-candidate-reproduction"
      ],
      "parameters": [
        {
          "name": "location-scheme",
          "in": "path",
          "description": "The scheme id for the location identifier.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": [
              "nl.ubn",
              "de.farmid",
              "be.pen"
            ]
          }
        },
        {
          "name": "location-id",
          "in": "path",
          "description": "The unique identifier for the location.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful. The response contains the Parturition events for the given location",
          "content": {
            "application/json": {
               "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "icarReproParturitionEventResource.json"
                  }
                }
            }
          }
        },
        "default": {
          "description": "An error has occured while handling the request. Check the content of the message for the error details.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/error"
                    }
                  }
                },
                "description": "A default response containing only a list of errors"
              }
            }
          }
        }
      }
    }
  }
},
"components": {
    "schemas": {
      "error": {
        "type": "object",
        "description": "Error information",
        "properties": {
          "data": {
            "description": "Error information",
            "$ref": "exampleErrorResource.json"
          }
        }
      }
    }
  }
}
