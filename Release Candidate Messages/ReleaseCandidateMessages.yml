swagger: '2.0'
info:
  title: Release Candidate Messages
  version: "1.0"
  description: |
    The specifications of messages which are ready for ICAR approval and release 
    
###############################################
# General information                         #
###############################################
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: ICAR approval ready
    description: |
      (almost) exact copy of existing ICAR-ADE standard message, ready for approval

###############################################
# Security                                    #
###############################################
securityDefinitions:
  jdClient:
    type: oauth2
    description: Secure access using client credentials grant
    flow: application
    tokenUrl: https://production.join-data.net/auth/realms/datahub/protocol/openid-connect/token
    scopes:
      fullaccess: Full access to all resources
  jdAuthorizationCode:
    type: oauth2
    description: Secure access using authorization grant flow
    flow: accessCode
    authorizationUrl: https://production.join-data.net/auth/realms/datahub/protocol/openid-connect/auth
    tokenUrl: https://production.join-data.net/auth/realms/datahub/protocol/openid-connect/token
    scopes:
      fullaccess: Full access to all resources
  jdImplicit:
    type: oauth2
    description: Secure access using implicit grant
    flow: implicit
    authorizationUrl: https://production.join-data.net/auth/realms/datahub/protocol/openid-connect/auth
    scopes:
      fullaccess: Full access to all resources
security:
  - jdClient:
    - fullaccess
  - jdAuthorizationCode:
    - fullaccess
  - jdImplicit:
    - fullaccess

###############################################
# Parameters                                  #
###############################################
parameters:
  pathLocationScheme:
    in: path
    name: location-scheme
    type: string
    description: The scheme id for the location identifier.
    required: true
    enum:
      - nl-v1
      - be-v1
  pathLocationId:
    in: path
    name: location-id
    type: string
    description: The unique identifier for the location.
    required: true
  pathMilkDeliveryId:
    in: path
    name: milk-delivery-id
    type: string
    description: The unique identifier for a milk delivery for a specific location.
    required: true
  pathMilkInvoiceId:
    in: path
    name: milk-invoice-id
    type: string
    description: The unique identifier for a milk invoice for a specific location.
    required: true
  pathIcarMilkingVisitId:
    in: path
    name: milking-visit-id
    type: string
    required: true
  queryStartDateTime:
    in: query
    name: start-date-time
    description: The start of the date-time range for the data to get in the request.
    type: string
    format: date-time
  queryStartDateTimeRequired:
    in: query
    name: start-date-time
    description: The start of the date-time range for the data to get in the request.
    required: true
    type: string
    format: date-time
  queryEndDateTime:
    in: query
    name: end-date-time
    description: The end of the date-time range for the data to get in the request.
    type: string
    format: date-time
  queryEndDateTimeRequired:
    in: query
    name: end-date-time
    description: The end of the date-time range for the data to get in the request.
    required: true
    type: string    
    format: date-time
  queryAnimalScheme:
    in: query
    name: animal-scheme
    type: string
    description: The scheme id for the animal identifier. Should be used together with animal-id.
    required: true
    enum:
      - nl-v1
      - be-v1
  queryAnimalId:
    in: query
    name: animal-id
    type: string
    description: The unique identifier for the animal. Should be used together with animal-scheme.
    required: true
  queryModifiedSince:
    in: query
    name: modified-since
    description: The date-time of insertion or last update of the event.
    type: string
    format: date-time

###############################################
# Responses                                   #
###############################################
responses:
#  okNoContent:
#    description: The request was successful.
  error:
    description: An error has occured while handling the request. Check the content of the message for the error details.
    schema:
      type: object
      description: A default response containing only a list of errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/definitions/error'
  
###############################################
# Definitions                                 #
###############################################
definitions:
  # ----------------------------------------------------------------------------
  # Generic Datahub definitions
  # ----------------------------------------------------------------------------
  error:
    type: object
    description: A human-readable error message describing what went wrong.
    properties:
      id:
        type: string
        description: A unique identifier for this particular occurrence of the problem
      status:
        type: integer
        format: int32
        description: The HTTP status code applicable to this problem, expressed as a string value
      code:
        type: string
        description: An application-specific error code, expressed as a string value.
      title:
        type: string
        description: A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.
      detail:
        type: string
        description: A human-readable explanation specific to this occurrence of the problem. Like title, this fieldâ€™s value can be localized.
      meta:
        type: object
  dataSource:
    description: Source where data is retrieved from. Details can be retrieved from the source register.
    type: string
  responseDataSource:
    type: object
    properties:
      id: 
        $ref: '#/definitions/dataSource'
    required:
      - id
  responseErrors:
    type: object          
    properties: 
     errors: 
        type: array
        items:
          $ref: '#/definitions/error'
  animalId:
    type: string
    description: A string which (in combination with a scheme) uniquely identifies an animal.
  animalIdScheme:
    type: string
    description: Identifies the used scheme for an animal identification string. nl-v1 life numbers are formatted as NL 123456789. See https://www.rvo.nl/onderwerpen/agrarisch-ondernemen/dieren/dieren-registreren/runderen/oormerken-voor-runderen for more information.
    enum:
      - nl-v1
      - be-v1
  animalIdentifier:
    type: object
    description: Identifies an animal
    properties:
      id:
        $ref: '#/definitions/animalId'
      scheme:
        $ref: '#/definitions/animalIdScheme'
    required:
      - id
      - scheme
  companyId:
    type: string
    description: A string which (in combination with a scheme) uniquely identifies a company.
  companyIdScheme:
    type: string
    description: Identifies the used scheme for a company identification string.
    enum:
      - nl-v1
      - be-v1
  companyIdentifier:
    type: object
    description: Identifies a company
    properties:
      id:
        $ref: '#/definitions/companyId'
      scheme:
        $ref: '#/definitions/companyIdScheme'
    required:
      - id
      - scheme

  # ----------------------------
  # ICAR ADE general definitions
  # ----------------------------
  icarCodeType:
    description: |
      A character string (letters, figures, or symbols) that for brevity and/or languange independence may be used to represent or replace a definitive value or text of an attribute together with relevant supplementary information.
    type: string
  icarDateType:
    description: udt:DateType | A day of the month or year as specified by a number.
    type: string
    format: date
  icarDateTimeType:
    description: udt:DateTimeType | A particular point in the progression of time together with relevant supplementary information.
    type: string
    format: datetime
  icarPeriodType:
    type: object
    properties:
      start:
        $ref: '#/definitions/icarDateTimeType'
      end:
        $ref: '#/definitions/icarDateTimeType'
    required:
      - start
      - end
  icarSexedSemenCode:
    type: string
    description: | 
      A list of codes representing the sexed semen type; can be -Y- for sexing semen Male or Female, -N- for no sexing semen, -F- for sexing semen Female or -M- for sexing semen Male.
    enum:
      - Y
      - F
      - M
      - N
      
  # -------------------
  # Milking Visits
  # -------------------
  icarMilkingVisitsResponse:
    type: array
    items:
      $ref: '#/definitions/icarMilkingVisitsResponseDataSources'
  icarMilkingVisitsResponseDataSources:
    type: object
    allOf:
      - $ref: '#/definitions/responseDataSource'
      - $ref: '#/definitions/responseErrors'
      - $ref: '#/definitions/icarMilkingVisitsResponseDataSource'
  icarMilkingVisitsResponseDataSource:
    type: object
    properties: 
      data:
        $ref: '#/definitions/icarMilkingVisitType'
  icarMilkingVisitType:
    type: object
    properties: 
      id:
        type: string
        description: A unique identifier for this location for the milking visit message
      animal:
        $ref: '#/definitions/animalIdentifier'
      milkingStartingDateTime:
        $ref: '#/definitions/icarDateTimeType'
      milkingDuration:
        type: object
        description: The length in time of the milking
        properties:
          value:
            type: number
            format: double
          unitCode:
            type: string
            description: UN/CEFACT Common Code for Units of Measurement.
            enum:
              - SEC
              - MIN
      milkingVisitDuration:
        type: object
        description: The length in time of the milking visit
        properties:
          value:
            type: number
            format: double
          unitCode:
            type: string
            description: UN/CEFACT Common Code for Units of Measurement.
            enum:
              - SEC
              - MIN
      milkingType:
        type: string
        description: The type of milking (manual or automated)
        enum:
          - Manual
          - Automated
      milkingMilkWeight:
        type: object
        description: The amount of milk milked
        properties:
          value: 
            type: number
            format: double
          unitCode:
            type: string
            description: UN/CEFACT Common Code for Units of Measurement.
            enum:
              - KGM
        required:
          - value
          - unitCode
      milkingSuccess:
        type: boolean
      milkingParlourUnit:
        description: The milking parlour unit where the milking took place.
        type: string
      milkingBoxNumber:
        description: The milking box number where the milking took place.
        type: string
      milkingDeviceId:
        description: The ID of the device where the milking took place
        type: string
      measureDeviceId:
        description: The ID of the device where the measurement of the milking took place
        type: string
    required:
    - animal
    - milkingStartingDateTime
    - milkingSuccess
  
  icarQuarterMilkingsResponse:
    type: array
    items:
      $ref: '#/definitions/icarQuarterMilkingsResponseDataSources'
  icarQuarterMilkingsResponseDataSources:
    type: object
    allOf:
      - $ref: '#/definitions/responseDataSource'
      - $ref: '#/definitions/responseErrors'
      - $ref: '#/definitions/icarQuarterMilkingsResponseDataSource'
  icarQuarterMilkingsResponseDataSource:
    type: object
    properties: 
      data:
        $ref: '#/definitions/icarQuarterMilkingsTypes'
  icarQuarterMilkingsTypes:
    type: array
    items:
     $ref: '#/definitions/icarQuarterMilkingType'
  icarQuarterMilkingType:
    type: object
    properties:
      icarQuarterId:
        $ref: '#/definitions/icarQuarterId'
      quarterMilkingDuration:
        $ref: '#/definitions/quarterMilkingDuration'
      quarterMilkingWeight:
        $ref: '#/definitions/quarterMilkingWeight'
      icarQuarterCharacteristics:
        type: array
        items: 
          $ref: '#/definitions/icarMilkCharacteristicsType'
      quarterMilkingSample:
        $ref: '#/definitions/quarterMilkingSample'
  icarQuarterId:
    type: string
    enum:
      - LF
      - RF
      - LB
      - RB 
  quarterMilkingDuration:
    type: object
    description: The length in time of the milking for this quarter
    properties:
      value:
        type: number
        format: double
      unitCode:
        type: string
        description: UN/CEFACT Common Code for Units of Measurement.
        enum:
          - SEC
          - MIN
  quarterMilkingWeight:
    type: object
    description: The weight of the milk milked of this quarter
    properties:
      value:
        type: number
        format: double
      unitCode:
        type: string
        description: UN/CEFACT Common Code for Units of Measurement.
        enum:
          - KGM
  quarterMilkingSample:
    type: object
    properties:
      sample:
        type: string
  icarMilkCharacteristicsTypes:
    type: array
    items:
      $ref: '#/definitions/icarMilkCharacteristicsType'
  icarMilkCharacteristicsType:
    type: object
    properties:
      characteristicsCode:
        type: string
        description: ICAR Milk Characteristics Code
        enum:
          - SCC
          - FAT
          - PROTEIN
          - LAC
          - UREA
          - BLOOD
          - ACETONE
          - BHB
          - LDH
          - PRO
          - AVGCOND
          - MAXCOND
          - AVGFLWR
          - MAXFLWR
          - WEIGHT
      value:
        type: number
        format: decimal
        description: Numeric value determined by measuring an object
  
  icarMilkCharacteristicsResponse:
    type: array
    items:
      $ref: '#/definitions/icarMilkCharacteristicsResponseDataSources'
  icarMilkCharacteristicsResponseDataSources:
    type: object
    allOf:
      - $ref: '#/definitions/responseDataSource'
      - $ref: '#/definitions/responseErrors'
      - $ref: '#/definitions/icarMilkCharacteristicsResponseDataSource'
  icarMilkCharacteristicsResponseDataSource:
    type: object
    properties: 
      data:
        $ref: '#/definitions/icarMilkCharacteristicsTypes'
  
  icarAnimalMilkingSampleResponse:
    type: array
    items:
      $ref: '#/definitions/icarAnimalMilkingSampleResponseDataSources'
  icarAnimalMilkingSampleResponseDataSources:
    type: object
    allOf:
      - $ref: '#/definitions/responseDataSource'
      - $ref: '#/definitions/responseErrors'
      - $ref: '#/definitions/icarAnimalMilkingSampleResponseDataSource'
  icarAnimalMilkingSampleResponseDataSource:
    type: object
    properties: 
      data:
        $ref: '#/definitions/icarAnimalMilkingSampleType'
  icarAnimalMilkingSampleType:
    type: object
    properties:
      bottleIdentifierType:
        type: string
        description: The type of bottle identifiertype according to ICAR_BottleIdentifierCode
        enum:
          - BRC
          - RFD
      rackNumber:
        type: string
        description: Number of the sample rack
      bottlePosition:
        type: string
        description: Position of the bottle in the sample rack
      bottleIdentifier:
        type: string
        description: Bottle identifier read from barcode or RFID
      validSampleFillingIndicator:
        type: string
        description: Indicator of valid sample filling according to ICAR_ValidSampleFillingIndicatorCode list
        enum:
          - 0
          - 1
          - 2
        
  icarTeatPositionsResponse:
    type: array
    items:
      $ref: '#/definitions/icarTeatPositionsResponseDataSources'
  icarTeatPositionsResponseDataSources:
    type: object
    allOf:
      - $ref: '#/definitions/responseDataSource'
      - $ref: '#/definitions/responseErrors'
      - $ref: '#/definitions/icarTeatPositionsResponseDataSource'
  icarTeatPositionsResponseDataSource:
    type: object
    properties: 
      data:
        $ref: '#/definitions/icarTeatPositionsTypes'
  icarTeatPositionsTypes:
    type: array
    items: 
      $ref: '#/definitions/icarTeatPositionsType'
  icarTeatPositionsType:
    type: object
    properties:
      icarQuarterId:
        $ref: '#/definitions/icarQuarterId'
      icarTeatPositions:  
        $ref: '#/definitions/icarTeatPositions'
  icarTeatPositions:
    type: object
    properties:
      x-position:
        type: integer
      y-position:
        type: integer
      z-position:
        type: integer
  


###############################################
# Paths                                       #
###############################################
paths:
  /locations/{location-scheme}/{location-id}/milking-visits:
    get:
      tags:
        - ICAR approval ready
      summary: Get the data for milking visits
      description: |
        # Purpose
        Provides data from visits of animals to a milking parlour
      parameters:
        - $ref: '#/parameters/pathLocationScheme'
        - $ref: '#/parameters/pathLocationId'
        - $ref: '#/parameters/queryStartDateTime'
        - $ref: '#/parameters/queryEndDateTime'
      responses:
        201:
          description: Successful. The response contains the milking results for the given location 
          schema:
            $ref: '#/definitions/icarMilkingVisitsResponse'
        default:
          $ref: '#/responses/error'
  /locations/{location-scheme}/{location-id}/milking-visits/{milking-visit-id}/characteristics:
    get:
      tags:
        - ICAR approval ready
      summary: Get the quarter milking data for a specific milking visit
      description: |
        # Purpose
        Provides quarter milking data from a singular visit of an animal to a milking parlour
      parameters:
        - $ref: '#/parameters/pathLocationScheme'
        - $ref: '#/parameters/pathLocationId'
        - $ref: '#/parameters/pathIcarMilkingVisitId'
      responses:
        201:
          description: Successful. The response contains the milking results for the given location 
          schema:
            $ref: '#/definitions/icarMilkCharacteristicsResponse'
        default:
          $ref: '#/responses/error'
          
  /locations/{location-scheme}/{location-id}/milking-visits/{milking-visit-id}/quarter-milkings:
    get:
      tags:
        - ICAR approval ready
      summary: Get the quarter milking data for a specific milking visit
      description: |
        # Purpose
        Provides quarter milking data from a singular visit of an animal to a milking parlour
      parameters:
        - $ref: '#/parameters/pathLocationScheme'
        - $ref: '#/parameters/pathLocationId'
        - $ref: '#/parameters/pathIcarMilkingVisitId'
      responses:
        201:
          description: Successful. The response contains the milking results for the given location 
          schema:
            $ref: '#/definitions/icarQuarterMilkingsResponse'
        default:
          $ref: '#/responses/error'
          
  /locations/{location-scheme}/{location-id}/milking-visits/{milking-visit-id}/animal-milking-sample:
    get:
      tags:
        - ICAR approval ready
      summary: Get the quarter milking data for a specific milking visit
      description: |
        # Purpose
        Provides quarter milking data from a singular visit of an animal to a milking parlour
      parameters:
        - $ref: '#/parameters/pathLocationScheme'
        - $ref: '#/parameters/pathLocationId'
        - $ref: '#/parameters/pathIcarMilkingVisitId'
      responses:
        201:
          description: Successful. The response contains the milking results for the given location 
          schema:
            $ref: '#/definitions/icarAnimalMilkingSampleResponse'
        default:
          $ref: '#/responses/error'
          